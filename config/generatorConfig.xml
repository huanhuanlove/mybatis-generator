<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 生成的pojo，将implements Serializable-->
    <!-- <classPathEntry location = "/mybatis-generator/lib/mysql-connector-java-5.1.27.jar"/> -->
    
    <!-- MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample； -->
    <context id="testTables" targetRuntime="MyBatis3">
        
		<!-- 是否生成注释代时间戳-->
		<property name="suppressDate" value="true"></property>
		
		<!-- 生成的Java文件的编码 -->
		<property name="javaFileEncoding" value="utf-8"/>
		
        <!-- 格式化java代码-->
    	<property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
	    
	    <!-- 格式化XML代码-->
	    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
	    
	    <!-- 配置pojo的序列化 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
            connectionURL="jdbc:mysql://127.0.0.1:3306/kang"
            userId="root"
            password="root"> 
        </jdbcConnection> 
        
        <!-- 数据库连接配置 sqlserver-->
        <!--<jdbcConnection driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
            connectionURL="jdbc:sqlserver://gsdy.eicp.net:8633;databasename=qkmls"
            userId="sa"
            password="sa@20170410" />-->
        
        <!-- 数据库连接配置 oracle-->
        <!--<jdbcConnection driverClass="oracle.jdbc.OracleDriver"
            connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:yycg" 
            userId="yycg"
            password="yycg">
            </jdbcConnection> -->

        <!-- 默认false，把JDBC decimal 和 number 类型解析为 Integer，
        	为 true时把JDBC DECIMAL和NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- targetProject:生成POJO类的位置 -->
        <javaModelGenerator targetPackage="entities" targetProject="./src">
            <!--  for MyBatis3/MyBatis3Simple 自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter -->
			<property name="constructorBased" value="true"/>
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <!-- <property name="trimStrings" value="true" /> -->
        </javaModelGenerator>
        
        <!-- targetProject:mapper映射文件生成的位置 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="./src">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        
        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="mapper" targetProject="./src">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="store" domainObjectName="Store"></table>
        <table tableName="admin" domainObjectName="Admin"></table>

		<!--
		<table tableName="tb_user" domainObjectName="User"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
		-->
    </context>
</generatorConfiguration>